// JavaScript for dropdown functionality
document.getElementById('transactionsDropdown').addEventListener('click', function () {
    var menu = document.getElementById('transactionsMenu');
    menu.classList.toggle('show');
});

// Format date to 'YYYY-MM-DD'
function formatDate(dateString) {
    const date = new Date(dateString);
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}

// Initialize order number (auto-generated by backend)
let orderNo = 4;

// Fetch and display sales from the backend
async function fetchSales() {
    try {
        const response = await fetch('http://localhost:0070/api/sales');
        const sales = await response.json();

        const tableBody = document.getElementById('customerTable');
        tableBody.innerHTML = ''; // Clear the table before populating

        // Populate table with sales data
        sales.forEach(sale => {
            const formattedDate = formatDate(sale.date);  // Format the date
            const newRow = tableBody.insertRow();
            newRow.innerHTML = `
                <td>${sale.orderNo}</td>
                <td>${sale.haircut}</td>
                <td>${formattedDate}</td>  <!-- Use formatted date here -->
                <td>₱${parseFloat(sale.price).toFixed(2)}</td>
            `;
        });
    } catch (error) {
        console.error('Error fetching sales:', error.message);
    }
}

// Call the fetchSales function when the page loads
document.addEventListener('DOMContentLoaded', fetchSales);

// Add new sale to table and send data to the backend
document.getElementById('saveCustomer').addEventListener('click', async function () {
    // Get form values
    const haircut = document.getElementById('haircut').value;
    const date = document.getElementById('date').value;
    const price = document.getElementById('price').value;

    // Validation
    if (!haircut || !date || !price) {
        alert('Please fill in all the fields.');
        return;
    }

    // Ensure the price is not negative
    if (parseFloat(price) <= 0) {
        alert('Please enter a valid price greater than 0.');
        return;
    }

    // Prepare data for the backend
    const saleData = {
        haircut: haircut,
        date: date,
        price: parseFloat(price),
    };

    try {
        // Send POST request to backend
        const response = await fetch('http://localhost:0070/api/sales', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(saleData),
        });

        // Check if the request was successful
        if (!response.ok) {
            throw new Error('Failed to add sale. Please try again.');
        }

        const result = await response.json();

        // Add new row to the table using response data
        const table = document.getElementById('customerTable');
        const formattedDate = formatDate(result.date);  // Format the date
        const newRow = table.insertRow();
        newRow.innerHTML = `
            <td>${result.orderNo}</td>
            <td>${result.haircut}</td>
            <td>${formattedDate}</td> <!-- Use formatted date here -->
            <td>₱${parseFloat(result.price).toFixed(2)}</td>
        `;

        // Clear input fields
        document.getElementById('haircut').value = '';
        document.getElementById('date').value = '';
        document.getElementById('price').value = '';

        // Close the modal
        var modal = bootstrap.Modal.getInstance(document.getElementById('myModal'));
        modal.hide();

        alert('Sale added successfully!');
    } catch (error) {
        console.error('Error:', error.message);
        alert('Error adding sale. Please try again.');
    }
});

// Date Filter Functionality
document.getElementById('dateFilter').addEventListener('input', function () {
    const filterDate = document.getElementById('dateFilter').value;  // Get selected date
    const rows = document.getElementById('customerTable').getElementsByTagName('tr');  // Get all rows in the table
    
    Array.from(rows).forEach(row => {
        const cells = row.getElementsByTagName('td');
        if (cells.length > 0) {
            const saleDate = cells[2].textContent.trim(); // Assuming the date is in the 3rd column

            // If filterDate is empty, show all rows, otherwise filter by date
            if (filterDate === '' || saleDate === filterDate) {
                row.style.display = ''; // Show row if dates match or no filter
            } else {
                row.style.display = 'none'; // Hide row if dates don't match
            }
        }
    });
});
